A O
Hacker O
who O
didn’t O
like O
how O
Tesla B_Veh_consists-of_1
Model I_Veh_consists-of_1
3 E_Veh_consists-of_1
and O
Model B_Veh_consists-of_1
Y E_Veh_consists-of_1
have O
all O
information O
displayed O
on O
a O
center B_Com_consists-of_m
console E_Com_consists-of_m
instead O
of O
a O
more O
traditional O
dash O
cluster O
decided O
to O
connect O
together O
a O
dash B_Tool
cluster E_Tool
of O
his O
own O
, O
calling O
it O
the O
CANdash S_Tool
. O

The O
CANdash S_Tool_uses_1
worked O
in O
a O
simple O
fashion O
, O
snooping S_AP_M_1
the O
Tesla’s S_Veh_consists-of_1
CAN B_Com_M_1
bus E_Com_M_1
for O
all O
the O
information O
relevant O
to O
the O
vehicle’s O
operation O
. O

It O
was O
capable O
of O
displaying O
everything O
from O
speed O
to O
the O
remaining O
range O
in O
the O
battery O
, O
while O
also O
allowing O
the O
user O
to O
keep O
an O
eye O
on O
things O
like O
coolant O
temperatures O
and O
whether O
the O
Tesla S_Veh_consists-of_1
Autopilot B_Com_consists-of_1
system E_Com_consists-of_1
was O
available O
. O

The O
build O
relies O
on O
a O
CANserver S_Com
, O
an O
ESP32-based B_Com
device E_Com
specifically O
built O
for O
hooking O
up O
to O
the O
CAN B_Com_consists-of_1
bus E_Com_consists-of_1
on O
Tesla S_Veh_consists-of_1
vehicles O
and O
sharing O
the O
data O
externally O
. O

The O
data O
can O
then O
be O
piped O
wirelessly O
to O
an O
Android B_Com
phone E_Com
running O
CANdash S_Tool
to O
display O
all O
the O
desired O
information O
. O

By O
using O
an O
aftermarket O
dash O
clip O
or O
a O
3D O
printed O
custom O
mount O
, O
the O
phone O
can O
then O
be O
placed O
behind O
the O
steering O
wheel O
to O
display O
data O
in O
the O
usual O
location O
. O

